#   This project is _not_ indended ever to be made into a distribution
#   package, so we do not have a `[project]` or `[build-system]` section
#   here.
#
#   If you did want (for some unknown reason) to make a distribution
#   package from this, all of the files under src/ need to be moved
#   so that they're not loaded as top-level Python modules. The easiest
#   way to go about this would be to rename the src/ directory to the
#   name of the top-level module you want to use, and do whatever else
#   you need to switch to a flat layout[1] project.
#
#   [1]: https://packaging.python.org/en/latest/discussions/src-layout-vs-flat-layout/

[tool.pytest.ini_options]
pythonpath = ['src']
testpaths = ['src']    # used only when pytest started from rootdir
addopts   = ['-q', '-p pytest_pt', '--doctest-modules']

#   We no longer use binarytree, but leave this here as an example of
#   how to deal with warnings in pytest in the most specific way possible.
#
#   binarytree emits a DeprecationWarning at â€¦/binarytree/__init__.py:30
#   saying,
#       pkg_resources is deprecated as an API.
#       See https://setuptools.pypa.io/en/latest/pkg_resources.html
#   This is due to the line:
#       from pkg_resources import get_distribution
filterwarnings = [
    'ignore:pkg_resources is deprecated as an API:DeprecationWarning:binarytree:30',
]

[tool.mypy]
files       = [ 'src/', 'src/**/*.pt' ]
mypy_path   = [ 'mypy-stubs/', ]
#   mypy normally loads non-*.py files as a module named __main__, causing
#   a collsion if there's more than one of them. The following option changes
#   mypy to name the module after the filename (including extension), which
#   allows checking multiple *.pt files in one run.
scripts_are_modules = true
